package nsbm;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.*;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author DELL
 */
public class CoursePanel extends javax.swing.JPanel {
    Connection conn=null;
    PreparedStatement pst =null;
    ResultSet rs=null;
    
    /**
     * Creates new form CoursePanel
     */
    public CoursePanel() {
        initComponents();
        
        mainPanel.removeAll();
        updateCombo();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add_subject = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        view_subject = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        assign_subject = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        addSubject = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnSubUpdate = new javax.swing.JButton();
        txtSubID = new javax.swing.JTextField();
        subName = new javax.swing.JTextField();
        credit = new javax.swing.JTextField();
        subYear = new javax.swing.JComboBox<>();
        semester = new javax.swing.JComboBox<>();
        cmbFacID = new javax.swing.JComboBox<>();
        courseID = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        btnSubAdd = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        txtNewSub = new javax.swing.JTextField();
        btnSubDelete = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        txtFee = new javax.swing.JTextField();
        sub = new javax.swing.JLabel();
        viewSubject = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtSem = new javax.swing.JTextField();
        txtCourseID = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        sub_table = new javax.swing.JTable();
        jLabel31 = new javax.swing.JLabel();
        btnViewSearch = new javax.swing.JButton();
        assignSubject = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtStaffid = new javax.swing.JTextField();
        txtSubjectid = new javax.swing.JTextField();
        loc = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        btnAssignAdd = new javax.swing.JButton();
        btnAssignUpdate = new javax.swing.JButton();
        btnAssignDelete = new javax.swing.JButton();
        btnAssignSearch = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        assign_table = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1090, 830));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        add_subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                add_subjectMouseClicked(evt);
            }
        });
        add_subject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/8.png"))); // NOI18N
        add_subject.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 100, 100));

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Add Subject");
        add_subject.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 160, -1));

        add(add_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 160, 150));

        view_subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                view_subjectMouseClicked(evt);
            }
        });
        view_subject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/9.png"))); // NOI18N
        view_subject.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 90, 80));

        jLabel11.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("View Subject");
        view_subject.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 160, -1));

        add(view_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 160, 150));

        assign_subject.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assign_subjectMouseClicked(evt);
            }
        });
        assign_subject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/3.png"))); // NOI18N
        assign_subject.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 100, 100));

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Assign Subject");
        assign_subject.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 160, -1));

        add(assign_subject, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 0, 160, 150));

        jLabel1.setBackground(new java.awt.Color(244, 252, 244));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1090, 150));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setMinimumSize(new java.awt.Dimension(1090, 680));
        mainPanel.setPreferredSize(new java.awt.Dimension(1090, 680));
        mainPanel.setLayout(new java.awt.CardLayout());

        addSubject.setBackground(new java.awt.Color(255, 255, 255));
        addSubject.setPreferredSize(new java.awt.Dimension(1090, 602));
        addSubject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel2.setText("Subject name");
        addSubject.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 140, 45));

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel3.setText("Subject Code");
        addSubject.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 140, 45));

        jLabel12.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel12.setText("Semester");
        addSubject.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 140, 45));

        jLabel13.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel13.setText("Add");
        addSubject.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 560, 50, 30));

        jLabel14.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel14.setText("Year");
        addSubject.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 140, 45));

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel8.setText("Delete");
        addSubject.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 560, 70, 30));

        jLabel15.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel15.setText("Subject Fee");
        addSubject.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 460, 140, 45));

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel9.setText("Update");
        addSubject.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 560, 80, 30));

        btnSubUpdate.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnSubUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnSubUpdate.setText("Add ");
        btnSubUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubUpdateActionPerformed(evt);
            }
        });
        addSubject.add(btnSubUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 550, 100, 52));

        txtSubID.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtSubID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubIDActionPerformed(evt);
            }
        });
        txtSubID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSubIDKeyReleased(evt);
            }
        });
        addSubject.add(txtSubID, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 40, 290, 40));

        subName.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        addSubject.add(subName, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 290, 40));

        credit.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        addSubject.add(credit, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 290, 40));

        subYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        addSubject.add(subYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 290, 40));

        semester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        addSubject.add(semester, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 280, 290, 40));
        addSubject.add(cmbFacID, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 340, 290, 40));

        courseID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                courseIDMouseEntered(evt);
            }
        });
        addSubject.add(courseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 290, 40));

        jLabel17.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel17.setText("Credit");
        addSubject.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 160, 140, 45));

        btnSubAdd.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnSubAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnSubAdd.setText("Add ");
        btnSubAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubAddActionPerformed(evt);
            }
        });
        addSubject.add(btnSubAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 550, 110, 52));

        jLabel21.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel21.setText("Faculty ID");
        addSubject.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 140, 45));

        txtNewSub.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        addSubject.add(txtNewSub, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 40, 260, 40));

        btnSubDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnSubDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubDeleteActionPerformed(evt);
            }
        });
        addSubject.add(btnSubDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 550, 100, 50));

        jLabel29.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel29.setText("Course ID");
        addSubject.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 140, 45));

        txtFee.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        addSubject.add(txtFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 460, 290, 40));

        sub.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sub.setForeground(new java.awt.Color(255, 0, 51));
        addSubject.add(sub, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 6, 200, 30));

        mainPanel.add(addSubject, "card2");

        viewSubject.setBackground(new java.awt.Color(255, 255, 255));
        viewSubject.setPreferredSize(new java.awt.Dimension(1090, 681));
        viewSubject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel16.setText("Semester");
        viewSubject.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 30, 110, 45));

        jLabel18.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel18.setText("Course ID");
        viewSubject.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 110, 45));

        jLabel19.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel19.setText("Year");
        viewSubject.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 30, 70, 45));
        viewSubject.add(txtSem, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 30, 150, 40));
        viewSubject.add(txtCourseID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 150, 40));
        viewSubject.add(txtYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 150, 40));

        sub_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject Code", "Subject Name", "Credit", "Year", "Semester"
            }
        ));
        jScrollPane1.setViewportView(sub_table);

        viewSubject.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 101, 1090, 580));

        jLabel31.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Search");
        viewSubject.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 30, 70, 30));

        btnViewSearch.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnViewSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnViewSearch.setText("Add ");
        btnViewSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewSearchActionPerformed(evt);
            }
        });
        viewSubject.add(btnViewSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 20, 111, 52));

        mainPanel.add(viewSubject, "card3");

        assignSubject.setBackground(new java.awt.Color(255, 255, 255));
        assignSubject.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel20.setText("Time");
        assignSubject.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 80, 45));

        jLabel22.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel22.setText("Subject ID");
        assignSubject.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 120, 45));

        jLabel24.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel24.setText("Delete");
        assignSubject.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 510, 80, 40));

        jLabel25.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel25.setText("Search");
        assignSubject.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, 80, 45));

        jLabel30.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel30.setText("Add");
        assignSubject.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 410, 50, 45));

        jLabel26.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel26.setText("Update");
        assignSubject.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, 80, 45));

        jLabel27.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel27.setText("Staff ID");
        assignSubject.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 100, 45));

        txtStaffid.setFont(new java.awt.Font("Serif", 0, 21)); // NOI18N
        assignSubject.add(txtStaffid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 220, 40));

        txtSubjectid.setFont(new java.awt.Font("Serif", 0, 21)); // NOI18N
        txtSubjectid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubjectidActionPerformed(evt);
            }
        });
        assignSubject.add(txtSubjectid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, 220, 40));

        loc.setFont(new java.awt.Font("Serif", 0, 21)); // NOI18N
        assignSubject.add(loc, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, 220, 40));

        time.setFont(new java.awt.Font("Serif", 0, 21)); // NOI18N
        assignSubject.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 220, 40));

        btnAssignAdd.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnAssignAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnAssignAdd.setText("Add ");
        btnAssignAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignAddActionPerformed(evt);
            }
        });
        assignSubject.add(btnAssignAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 110, 60));

        btnAssignUpdate.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnAssignUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnAssignUpdate.setText("Add ");
        btnAssignUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignUpdateActionPerformed(evt);
            }
        });
        assignSubject.add(btnAssignUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, 111, 60));

        btnAssignDelete.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnAssignDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnAssignDelete.setText("Add ");
        btnAssignDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignDeleteActionPerformed(evt);
            }
        });
        assignSubject.add(btnAssignDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, 110, 60));

        btnAssignSearch.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnAssignSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnAssignSearch.setText("Add ");
        btnAssignSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignSearchActionPerformed(evt);
            }
        });
        assignSubject.add(btnAssignSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 500, 110, 60));

        jLabel28.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel28.setText("Location");
        assignSubject.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 110, 45));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        assign_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(assign_table);

        assignSubject.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 30, 690, 650));

        mainPanel.add(assignSubject, "card4");

        add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1090, 680));
    }// </editor-fold>//GEN-END:initComponents
    private void updateCombo(){
        String query="select * from faculty";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            while(rs.next()){
                cmbFacID.addItem(rs.getString("faculty_id"));
            }
            conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }
    
    private void add_subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_add_subjectMouseClicked
        mainPanel.removeAll();
        mainPanel.add(addSubject);
        mainPanel.revalidate();
        mainPanel.repaint();
        
        
    }//GEN-LAST:event_add_subjectMouseClicked

    private void view_subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_view_subjectMouseClicked
        mainPanel.removeAll();
        mainPanel.add(viewSubject);
        mainPanel.revalidate();
        mainPanel.repaint();
        
    }//GEN-LAST:event_view_subjectMouseClicked

    private void btnAssignSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignSearchActionPerformed
        
        String query = null;
        String a=txtStaffid.getText();
        String b=txtSubjectid.getText();
        String c=loc.getText();
        String d=time.getText();
        
        
        if("".equals(b) && "".equals(c) && "".equals(d)){
            query="select subject_id,sub_name,location,time from assign inner join staff on staff.staff_id=assign.staffid inner join subject on subject.sub_id=assign.subject_id where staffid='"+a+"' order by time asc";
            
        }
        else if("".equals(a) && "".equals(c) && "".equals(d)){
            query="select staffid,staff_name,sub_name,location,time from assign inner join staff on staff.staff_id=assign.staffid inner join subject on subject.sub_id=assign.subject_id where subject_id='"+b+"'";
        }
        else if("".equals(a) && "".equals(b) && "".equals(d)){
            query="select staffid,staff_name,subject_id,sub_name,time from assign inner join staff on staff.staff_id=assign.staffid inner join subject on subject.sub_id=assign.subject_id where location='"+c+"' order by time asc";
        }
        else if("".equals(a) && "".equals(b) && "".equals(c)){
            query="select staffid,staff_name,subject_id,sub_name,location,time from assign inner join staff on staff.staff_id=assign.staffid inner join subject on subject.sub_id=assign.subject_id where time like '%"+d+"%' order by time asc";
        }
        

        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            assign_table.setModel(DbUtils.resultSetToTableModel(rs));
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Error retrieving data to table");
        }
        
    }//GEN-LAST:event_btnAssignSearchActionPerformed

    private void btnAssignAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignAddActionPerformed
        
        String query="insert into assign(staffid,subject_id,location,time)values(?,?,?,?)";
        String query1="select * from assign order by subject_id asc";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            pst.setString(1,txtStaffid.getText());
            pst.setString(2,txtSubjectid.getText());
            pst.setString(3,loc.getText());
            pst.setString(4,time.getText());
            pst.executeUpdate(); 
            conn.close();
            JOptionPane.showMessageDialog(null,"Class allocation added successfully. ");
            try{
                conn=MySqlConnect.ConnectDB();
                pst=conn.prepareStatement(query1);
                rs=pst.executeQuery();
                assign_table.setModel(DbUtils.resultSetToTableModel(rs));
                conn.close();
            
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null,"Table data cannot be retrieved");
            }
            clearAssign();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_btnAssignAddActionPerformed

    private void assign_subjectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assign_subjectMouseClicked
        mainPanel.removeAll();
        mainPanel.add(assignSubject);
        mainPanel.repaint();
        mainPanel.revalidate();
    }//GEN-LAST:event_assign_subjectMouseClicked

    private void btnSubAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubAddActionPerformed
        if(txtSubID.getText().trim().isEmpty()){
            sub.setText("**Subject ID is empty**");
        }
        else{
        String query="insert into subject(sub_id,sub_name,credit,sub_year,semester,course_id,subject_fee)values(?,?,?,?,?,?,?)";
        
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            pst.setString(1,txtSubID.getText());
            pst.setString(2,subName.getText());
            pst.setString(3,credit.getText());
            pst.setString(4, (String) subYear.getSelectedItem());
            pst.setString(5, (String) semester.getSelectedItem());
            pst.setString(6, (String) courseID.getSelectedItem());
            pst.setString(7,txtFee.getText());
            pst.executeUpdate(); 
            conn.close();
            JOptionPane.showMessageDialog(null,"Subject added successfully. ");
            clear();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        }
    }//GEN-LAST:event_btnSubAddActionPerformed

    private void btnViewSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewSearchActionPerformed
        
        String query;
        String a=txtCourseID.getText();
        String b=txtYear.getText();
        String c=txtSem.getText();
        if("".equals(b) && "".equals(c)){
            query="select * from subject where course_id='"+a+"' order by sub_id asc";
        }
        else if("".equals(c)){
            query="select * from subject where course_id='"+a+"' and sub_year='"+b+"' order by sub_id asc";
        }
        else{
            query="select * from subject where course_id='"+a+"' and sub_year='"+b+"' and semester='"+c+"' order by sub_id asc";
        }

        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            DefaultTableModel tm=(DefaultTableModel)sub_table.getModel();
            tm.setRowCount(0);
            while(rs.next()){
                Object o[]={rs.getString("sub_id"),rs.getString("sub_name"),rs.getString("credit"),rs.getString("sub_year"),rs.getString("semester")};
                tm.addRow(o);
            }
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_btnViewSearchActionPerformed

    private void btnSubUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubUpdateActionPerformed
        if(txtSubID.getText().trim().isEmpty()){
            sub.setText("**Subject ID is empty**");
        }
        else{
            try{
                conn=MySqlConnect.ConnectDB();
                pst=conn.prepareStatement("select * from subject where sub_id='"+txtSubID.getText()+"'");
                rs=pst.executeQuery();
                if(rs.next()){
                    String query;
                    if("".equals(txtNewSub.getText())){query="update subject set sub_name=?,credit=?,sub_year=?,semester=?,course_id=?,subject_fee=? where sub_id=?";
                        try{
                            conn=MySqlConnect.ConnectDB();  
                            pst=conn.prepareStatement(query);

                            pst.setString(1, subName.getText());
                            pst.setString(2, credit.getText());
                            pst.setString(3, (String) subYear.getSelectedItem());
                            pst.setString(4, (String) semester.getSelectedItem());
                            pst.setString(5, (String) courseID.getSelectedItem());
                            pst.setString(6, txtFee.getText());
                            pst.setString(7, txtSubID.getText());

                            pst.executeUpdate();
                            conn.close();
                            JOptionPane.showMessageDialog(null,"Subject details updated successfully. ");
                            clear();
                        }
                        catch(SQLException e){
                            JOptionPane.showMessageDialog(null,e);
                        }
                    }
                    else{query="update subject set sub_id=?,sub_name=?,credit=?,sub_year=?,semester=?,course_id=?,subject_fee=? where sub_id=?";
                        try{
                            conn=MySqlConnect.ConnectDB();  
                            pst=conn.prepareStatement(query);
                            pst.setString(1, txtNewSub.getText());
                            pst.setString(2, subName.getText());
                            pst.setString(3, credit.getText());
                            pst.setString(4, (String) subYear.getSelectedItem());
                            pst.setString(5, (String) semester.getSelectedItem());
                            pst.setString(6, (String) courseID.getSelectedItem());
                            pst.setString(7, txtFee.getText());
                            pst.setString(8, txtSubID.getText());
                            pst.executeUpdate();
                            conn.close();
                            JOptionPane.showMessageDialog(null,"Subject details updated successfully. ");
                            clear();
                        }
                        catch(SQLException e){
                            JOptionPane.showMessageDialog(null,e);
                        }
                    } 
                }
                else{
                    sub.setText("Subject ID does not exist");clear();
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
            
        }
        
        
        
    }//GEN-LAST:event_btnSubUpdateActionPerformed

    private void txtSubIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubIDActionPerformed
        subName.setText("");credit.setText("");txtFee.setText("");
        String a=txtSubID.getText();
        String query="select * from subject,course where subject.course_id=course.course_id and sub_id='"+a+"'";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            if(rs.next()){
                subName.setText(rs.getString("sub_name"));
                credit.setText(rs.getString("credit"));
                subYear.setSelectedItem(rs.getString("sub_year"));
                semester.setSelectedItem(rs.getString("semester"));
                courseID.addItem(rs.getString("subject.course_id"));
                courseID.setSelectedItem(rs.getString("subject.course_id"));
                cmbFacID.setSelectedItem(rs.getString("faculty_id"));
                txtFee.setText(rs.getString("subject_fee"));
            }
            else{
                JOptionPane.showMessageDialog(null,"Invalid Subject ID");clear();
            }
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtSubIDActionPerformed

    private void btnAssignUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignUpdateActionPerformed
        String query="update assign set location=?,time=? where staffid=? and subject_id=?";
        String query1="select * from assign order by subject_id asc";
        try{//Checking whether the staffid and subjectid exists in database
        conn=MySqlConnect.ConnectDB();
        pst=conn.prepareStatement("select * from assign where staffid='"+txtStaffid.getText()+"' and subject_id='"+txtSubjectid.getText()+"'");
        rs=pst.executeQuery();
        if(rs.next()){//if staff id and subject id exists, it does the following steps.
        try{//Update class allocation of "assign" table
            conn=MySqlConnect.ConnectDB();  
            pst=conn.prepareStatement(query);
            
            pst.setString(1, loc.getText());
            pst.setString(2, time.getText());
            pst.setString(3, txtStaffid.getText());
            pst.setString(4, txtSubjectid.getText());
            pst.executeUpdate();
            conn.close();
            JOptionPane.showMessageDialog(null,"Updated Successfully. ");
            try{//Loading "assign" table
                conn=MySqlConnect.ConnectDB();
                pst=conn.prepareStatement(query1);
                rs=pst.executeQuery();
                assign_table.setModel(DbUtils.resultSetToTableModel(rs));
                conn.close();
            
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null,"Table data cannot be retrieved");
            }
            clearAssign();// clear text fields
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        }
        else{//if staffid and subjectid doesnt exist,gives an error
            JOptionPane.showMessageDialog(null,"Invalid Staff ID or Subject ID");
        }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        
        
    }//GEN-LAST:event_btnAssignUpdateActionPerformed

    private void btnAssignDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignDeleteActionPerformed
        String query="delete from assign where staffid=? and subject_id=?";
        String query1="select * from assign order by subject_id asc";
        try{//Checking whether the staffid and subjectid exists in database
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement("select * from assign where staffid='"+txtStaffid.getText()+"' and subject_id='"+txtSubjectid.getText()+"'");
            rs=pst.executeQuery();
            if(rs.next()){//if staff id and subject id exists, it does the following steps.
                int option=JOptionPane.showConfirmDialog(null,"Do you really want to delete assignment of subject? ","Delete",JOptionPane.YES_NO_OPTION);
                if(option==0){
                    try{//Update class allocation of "assign" table
                        conn=MySqlConnect.ConnectDB();
                        pst=conn.prepareStatement(query);
                        pst.setString(1, txtStaffid.getText());
                        pst.setString(2, txtSubjectid.getText());
                        pst.execute();
                        conn.close();
                        try{//Loading "assign" table
                            conn=MySqlConnect.ConnectDB();
                            pst=conn.prepareStatement(query1);
                            rs=pst.executeQuery();
                            assign_table.setModel(DbUtils.resultSetToTableModel(rs));
                            conn.close();

                        } catch (SQLException e) {
                            JOptionPane.showMessageDialog(null,"Table data cannot be retrieved");
                        }
                        clearAssign();// clear text fields
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null,e);
                    }
                    
            
                }
            }
            else{//if staffid and subjectid doesnt exist,gives an error
                JOptionPane.showMessageDialog(null,"Invalid Staff ID or Subject ID ");
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnAssignDeleteActionPerformed

    private void txtSubjectidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubjectidActionPerformed
        String a=txtStaffid.getText();
        String b=txtSubjectid.getText();
        String query="select * from assign where staffid='"+a+"' and subject_id='"+b+"'";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            if(rs.next()){
                
                
                loc.setText(rs.getString("location"));
                time.setText(rs.getString("time"));
            }
            else{
                JOptionPane.showMessageDialog(null,"Invalid Staff ID or Subject ID");
            }
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtSubjectidActionPerformed

    private void courseIDMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_courseIDMouseEntered
        String a=(String) cmbFacID.getSelectedItem();
        String query="select * from course where faculty_id='"+a+"'";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            courseID.removeAllItems();
            while(rs.next()){
                courseID.addItem(rs.getString("course_id"));
            }
            conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_courseIDMouseEntered

    private void btnSubDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubDeleteActionPerformed
        if(txtSubID.getText().trim().isEmpty()){
            sub.setText("**Subject ID is empty**");
        }
        else{
            try{
                conn=MySqlConnect.ConnectDB();
                pst=conn.prepareStatement("select * from subject where sub_id='"+txtSubID.getText()+"'");
                rs=pst.executeQuery();
                if(rs.next()){
                    String query="delete from subject where sub_id=?";
                    int option=JOptionPane.showConfirmDialog(null,"Do you really want to delete this Subject? ","Delete",JOptionPane.YES_NO_OPTION);
                    if(option==0){
                       try{
                            conn=MySqlConnect.ConnectDB();
                            pst=conn.prepareStatement(query);
                            pst.setString(1, txtSubID.getText());
                            pst.execute();
                            conn.close();
                            clear();
                        }
                        catch(SQLException e){
                            JOptionPane.showMessageDialog(null,e);
                        } 
                    }
                }
                else{
                    sub.setText("Subject ID does not exist");clear();
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
        
   
    }//GEN-LAST:event_btnSubDeleteActionPerformed

    private void txtSubIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubIDKeyReleased
        sub.setText("");
    }//GEN-LAST:event_txtSubIDKeyReleased
    private void clear(){
        txtSubID.setText("");subName.setText("");credit.setText("");txtFee.setText("");
        subYear.setSelectedIndex(0);semester.setSelectedIndex(0);cmbFacID.setSelectedIndex(0);courseID.setSelectedIndex(0);
    }
    private void clearAssign(){
        txtStaffid.setText("");txtSubjectid.setText("");loc.setText("");time.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addSubject;
    private javax.swing.JPanel add_subject;
    private javax.swing.JPanel assignSubject;
    private javax.swing.JPanel assign_subject;
    private javax.swing.JTable assign_table;
    private javax.swing.JButton btnAssignAdd;
    private javax.swing.JButton btnAssignDelete;
    private javax.swing.JButton btnAssignSearch;
    private javax.swing.JButton btnAssignUpdate;
    private javax.swing.JButton btnSubAdd;
    private javax.swing.JButton btnSubDelete;
    private javax.swing.JButton btnSubUpdate;
    private javax.swing.JButton btnViewSearch;
    private javax.swing.JComboBox<String> cmbFacID;
    private javax.swing.JComboBox<String> courseID;
    private javax.swing.JTextField credit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField loc;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox<String> semester;
    private javax.swing.JLabel sub;
    private javax.swing.JTextField subName;
    private javax.swing.JComboBox<String> subYear;
    private javax.swing.JTable sub_table;
    private javax.swing.JTextField time;
    private javax.swing.JTextField txtCourseID;
    private javax.swing.JTextField txtFee;
    private javax.swing.JTextField txtNewSub;
    private javax.swing.JTextField txtSem;
    private javax.swing.JTextField txtStaffid;
    private javax.swing.JTextField txtSubID;
    private javax.swing.JTextField txtSubjectid;
    private javax.swing.JTextField txtYear;
    private javax.swing.JPanel viewSubject;
    private javax.swing.JPanel view_subject;
    // End of variables declaration//GEN-END:variables
}
