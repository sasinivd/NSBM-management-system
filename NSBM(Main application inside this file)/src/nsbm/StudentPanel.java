package nsbm;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.sql.*;
import java.awt.*;
import net.proteanit.sql.DbUtils;
import javax.swing.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.mail.internet.MimeMessage;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import java.util.Date;
import java.io.FileOutputStream;
import java.io.*;
import java.util.*;
import javax.activation.*;
/**
 *
 * @author DELL
 */
public class StudentPanel extends javax.swing.JPanel {

    Connection conn=null;
    PreparedStatement pst =null;
    ResultSet rs=null;
    /**
     * Creates new form Student_panel
     */
    public StudentPanel() {
        initComponents();
        mainPanel.removeAll();
        hideFields();
        Updatecombo();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupType = new javax.swing.ButtonGroup();
        Gender = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        registerStudent = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        viewStudent = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        enrol = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        result = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        viewResult = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        registerPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        lblSubject = new javax.swing.JLabel();
        lblGrade = new javax.swing.JLabel();
        lblIndex = new javax.swing.JLabel();
        lblQualify = new javax.swing.JLabel();
        lblInstitute = new javax.swing.JLabel();
        lblYOC = new javax.swing.JLabel();
        radUndergrad = new javax.swing.JRadioButton();
        radPostgrad = new javax.swing.JRadioButton();
        txtStuID = new javax.swing.JTextField();
        StuName = new javax.swing.JTextField();
        StuAddress = new javax.swing.JTextField();
        StuCno = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        cmbFac = new javax.swing.JComboBox<>();
        cmbCourse = new javax.swing.JComboBox<>();
        intake = new javax.swing.JTextField();
        txtIndex = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtYOC = new javax.swing.JTextField();
        Sub1 = new javax.swing.JTextField();
        Sub2 = new javax.swing.JTextField();
        Sub3 = new javax.swing.JTextField();
        Sub4 = new javax.swing.JTextField();
        txtGrade1 = new javax.swing.JTextField();
        txtGrade2 = new javax.swing.JTextField();
        txtGrade3 = new javax.swing.JTextField();
        txtGrade4 = new javax.swing.JTextField();
        btnStuAdd = new javax.swing.JButton();
        btnStuUpdate = new javax.swing.JButton();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        btnStuDelete = new javax.swing.JButton();
        DOB = new javax.swing.JTextField();
        viewStudentPanel = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        stuid = new javax.swing.JTextField();
        course_id = new javax.swing.JTextField();
        txtInta = new javax.swing.JTextField();
        btnStuSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        student_table = new javax.swing.JTable();
        enrolPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        sub_id = new javax.swing.JTextField();
        btnEnrol = new javax.swing.JButton();
        btnUnenrol = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        txtSid = new javax.swing.JTextField();
        txtSem = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        enrol_table = new javax.swing.JTable();
        btnenrolSearch = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        txtyr = new javax.swing.JTextField();
        lblCredit = new javax.swing.JLabel();
        btnEmail_Fee = new javax.swing.JButton();
        resultPanel = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtSubID = new javax.swing.JTextField();
        txtasses = new javax.swing.JTextField();
        txtResult = new javax.swing.JTextField();
        txtGrade = new javax.swing.JTextField();
        btnResultAdd = new javax.swing.JButton();
        btnGradeAdd = new javax.swing.JButton();
        weight = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        txtsub_id = new javax.swing.JTextField();
        txtc_id = new javax.swing.JTextField();
        txtin = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        btnAddGrade_auto = new javax.swing.JButton();
        btnResultUpdate = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        stu_sem = new javax.swing.JTextField();
        stu_id = new javax.swing.JTextField();
        stu_year = new javax.swing.JTextField();
        btnSendEmail = new javax.swing.JButton();
        viewResultPanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        btnResultSearch = new javax.swing.JButton();
        txtStuid = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        subject_code = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        sem = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        result_table = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        txtint = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1090, 830));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        registerStudent.setBackground(new java.awt.Color(215, 224, 240));
        registerStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerStudentMouseClicked(evt);
            }
        });
        registerStudent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/3.png"))); // NOI18N
        registerStudent.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 100, 100));

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Register Student");
        registerStudent.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 160, -1));

        add(registerStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 160, 150));

        viewStudent.setBackground(new java.awt.Color(215, 224, 240));
        viewStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewStudentMouseClicked(evt);
            }
        });
        viewStudent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("View Student");
        viewStudent.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 130, 30));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/3.png"))); // NOI18N
        viewStudent.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 100, 100));

        add(viewStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 160, 150));

        enrol.setBackground(new java.awt.Color(215, 224, 240));
        enrol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enrolMouseClicked(evt);
            }
        });
        enrol.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/4.png"))); // NOI18N
        enrol.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 90, 100));

        jLabel8.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Enrol Subject");
        enrol.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 130, 30));

        add(enrol, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 150, 150));

        result.setBackground(new java.awt.Color(215, 224, 240));
        result.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultMouseClicked(evt);
            }
        });
        result.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter Results");
        result.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 120, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/5.png"))); // NOI18N
        result.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 80, 100));

        add(result, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 0, 150, 150));

        viewResult.setBackground(new java.awt.Color(215, 224, 240));
        viewResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewResultMouseClicked(evt);
            }
        });
        viewResult.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("View Results");
        viewResult.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 130, 30));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/5.png"))); // NOI18N
        viewResult.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 100, 100));

        add(viewResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 0, 150, 150));

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setLayout(new java.awt.CardLayout());

        registerPanel.setBackground(new java.awt.Color(255, 255, 255));
        registerPanel.setMinimumSize(new java.awt.Dimension(1090, 640));
        registerPanel.setPreferredSize(new java.awt.Dimension(1090, 640));
        registerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel10.setText("Student ID");
        registerPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 140, 45));

        jLabel14.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel14.setText("Name");
        registerPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 140, 45));

        jLabel15.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel15.setText("Date of Birth");
        registerPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 140, 45));

        jLabel16.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel16.setText("Gender");
        registerPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 140, 45));

        jLabel11.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel11.setText("Address");
        registerPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 140, 45));

        jLabel18.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel18.setText("Contact No");
        registerPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 140, 45));

        jLabel21.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel21.setText("Email");
        registerPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 140, 45));

        jLabel25.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel25.setText("Faculty");
        registerPanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 140, 45));

        jLabel19.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel19.setText("Intake");
        registerPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 140, 45));

        jLabel27.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel27.setText("Type");
        registerPanel.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 70, 110, 45));

        jLabel40.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel40.setText("Course");
        registerPanel.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 140, 45));

        lblYear.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        lblYear.setText("Year sat for A/L");
        registerPanel.add(lblYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, 160, 45));

        lblSubject.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        lblSubject.setText("Subject");
        registerPanel.add(lblSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, 140, 45));

        lblGrade.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        lblGrade.setText("Grade");
        registerPanel.add(lblGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 260, 110, 45));

        lblIndex.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        lblIndex.setText("A/L Index No");
        registerPanel.add(lblIndex, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, -1, 45));

        lblQualify.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        lblQualify.setText("Qualification Type");
        registerPanel.add(lblQualify, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, 190, 45));

        lblInstitute.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        lblInstitute.setText("Institute");
        registerPanel.add(lblInstitute, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, 130, 45));

        lblYOC.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        lblYOC.setText("Year of Completion");
        registerPanel.add(lblYOC, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 260, 210, 45));

        groupType.add(radUndergrad);
        radUndergrad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radUndergrad.setText("Undergraduate");
        radUndergrad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radUndergradActionPerformed(evt);
            }
        });
        registerPanel.add(radUndergrad, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 80, -1, -1));

        groupType.add(radPostgrad);
        radPostgrad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        radPostgrad.setText("Postgraduate");
        radPostgrad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radPostgradActionPerformed(evt);
            }
        });
        registerPanel.add(radPostgrad, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 80, -1, -1));

        txtStuID.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        txtStuID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtStuIDMouseClicked(evt);
            }
        });
        txtStuID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStuIDActionPerformed(evt);
            }
        });
        registerPanel.add(txtStuID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 350, 40));

        StuName.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(StuName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 350, 40));

        StuAddress.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(StuAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 350, 40));

        StuCno.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(StuCno, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 350, 40));

        Email.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 350, 40));
        registerPanel.add(cmbFac, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, 350, 40));

        cmbCourse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbCourseMouseEntered(evt);
            }
        });
        registerPanel.add(cmbCourse, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 500, 350, 40));

        intake.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(intake, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 20, 290, 40));

        txtIndex.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(txtIndex, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 130, 290, 40));

        txtYear.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(txtYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 190, 290, 40));

        txtYOC.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(txtYOC, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 260, 290, 40));

        Sub1.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(Sub1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 320, 250, 40));

        Sub2.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(Sub2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 380, 250, 40));

        Sub3.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(Sub3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 440, 250, 40));

        Sub4.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(Sub4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 500, 250, 40));

        txtGrade1.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(txtGrade1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 320, 90, 40));

        txtGrade2.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(txtGrade2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 380, 90, 40));

        txtGrade3.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(txtGrade3, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 440, 90, 40));

        txtGrade4.setFont(new java.awt.Font("Serif", 0, 22)); // NOI18N
        registerPanel.add(txtGrade4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 500, 90, 40));

        btnStuAdd.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnStuAdd.setText("Add");
        btnStuAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuAddActionPerformed(evt);
            }
        });
        registerPanel.add(btnStuAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 590, 130, 50));

        btnStuUpdate.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnStuUpdate.setText("Update");
        btnStuUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuUpdateActionPerformed(evt);
            }
        });
        registerPanel.add(btnStuUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 590, 130, 50));

        Gender.add(female);
        female.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        female.setText("Female");
        registerPanel.add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 200, 100, -1));

        Gender.add(male);
        male.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        male.setText("Male");
        registerPanel.add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 100, -1));

        btnStuDelete.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnStuDelete.setText("Delete");
        btnStuDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuDeleteActionPerformed(evt);
            }
        });
        registerPanel.add(btnStuDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 590, 120, 50));

        DOB.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        registerPanel.add(DOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(179, 140, 350, 40));

        mainPanel.add(registerPanel, "card2");

        viewStudentPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewStudentPanel.setPreferredSize(new java.awt.Dimension(1090, 681));
        viewStudentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel35.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel35.setText("Course ID");
        viewStudentPanel.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 100, 45));

        jLabel36.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel36.setText("Intake");
        viewStudentPanel.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, 80, 45));

        jLabel37.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel37.setText("Student ID");
        viewStudentPanel.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 120, 45));

        stuid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewStudentPanel.add(stuid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 170, 40));

        course_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewStudentPanel.add(course_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 170, 40));

        txtInta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        viewStudentPanel.add(txtInta, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 170, 40));

        btnStuSearch.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnStuSearch.setText("Search");
        btnStuSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStuSearchActionPerformed(evt);
            }
        });
        viewStudentPanel.add(btnStuSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 10, 111, 52));

        student_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(student_table);

        viewStudentPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 91, 1090, 590));

        mainPanel.add(viewStudentPanel, "card5");

        enrolPanel.setBackground(new java.awt.Color(255, 255, 255));
        enrolPanel.setPreferredSize(new java.awt.Dimension(1090, 681));
        enrolPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel20.setText("Year");
        enrolPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 120, 45));

        jLabel28.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel28.setText("Semester");
        enrolPanel.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 100, 45));

        jLabel26.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel26.setText("Subject ID");
        enrolPanel.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 120, 45));

        sub_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enrolPanel.add(sub_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 230, 40));

        btnEnrol.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnEnrol.setText("Enrol");
        btnEnrol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnrolActionPerformed(evt);
            }
        });
        enrolPanel.add(btnEnrol, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 100, 50));

        btnUnenrol.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnUnenrol.setText("Unenrol");
        btnUnenrol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnenrolActionPerformed(evt);
            }
        });
        enrolPanel.add(btnUnenrol, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, 120, 50));

        jLabel41.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel41.setText("Student ID");
        enrolPanel.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 120, 45));

        txtSid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enrolPanel.add(txtSid, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 230, 40));

        txtSem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSemActionPerformed(evt);
            }
        });
        enrolPanel.add(txtSem, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 230, 40));

        enrol_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(enrol_table);

        enrolPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 21, 680, 660));

        btnenrolSearch.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnenrolSearch.setText("Search");
        btnenrolSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnenrolSearchActionPerformed(evt);
            }
        });
        enrolPanel.add(btnenrolSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 400, 100, 50));

        jLabel47.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel47.setText("Total credits");
        enrolPanel.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 130, 50));

        txtyr.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtyr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtyrActionPerformed(evt);
            }
        });
        enrolPanel.add(txtyr, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 230, 40));

        lblCredit.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        enrolPanel.add(lblCredit, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 140, 40));

        btnEmail_Fee.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        btnEmail_Fee.setText("Send Email");
        btnEmail_Fee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmail_FeeActionPerformed(evt);
            }
        });
        enrolPanel.add(btnEmail_Fee, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 480, 140, 50));

        mainPanel.add(enrolPanel, "card3");

        resultPanel.setBackground(new java.awt.Color(255, 255, 255));
        resultPanel.setPreferredSize(new java.awt.Dimension(1090, 615));
        resultPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel29.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel29.setText("Result");
        resultPanel.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, 140, 45));

        jLabel30.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel30.setText("Semester");
        resultPanel.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 140, 45));

        jLabel31.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel31.setText("Intake");
        resultPanel.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 570, 80, 45));

        jLabel32.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel32.setText("Final Grade");
        resultPanel.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 140, 45));

        jLabel33.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel33.setText("Assesment");
        resultPanel.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 140, 45));

        txtID.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        resultPanel.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, 260, 40));

        txtSubID.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        resultPanel.add(txtSubID, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 260, 40));

        txtasses.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        resultPanel.add(txtasses, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 260, 40));

        txtResult.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        resultPanel.add(txtResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 280, 260, 40));

        txtGrade.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        resultPanel.add(txtGrade, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 340, 260, 40));

        btnResultAdd.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        btnResultAdd.setText("Add Result");
        btnResultAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultAddActionPerformed(evt);
            }
        });
        resultPanel.add(btnResultAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 140, 50));

        btnGradeAdd.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        btnGradeAdd.setText("Add Grade");
        btnGradeAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGradeAddActionPerformed(evt);
            }
        });
        resultPanel.add(btnGradeAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 430, -1, 50));

        weight.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        resultPanel.add(weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 260, 40));

        jLabel17.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel17.setText("Weight");
        resultPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 130, 40));

        jLabel38.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel38.setText("Subject Code");
        resultPanel.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 140, 45));

        jLabel42.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel42.setText("Subject ID");
        resultPanel.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 120, 45));

        txtsub_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultPanel.add(txtsub_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 570, 150, 40));

        txtc_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultPanel.add(txtc_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 570, 150, 40));

        txtin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultPanel.add(txtin, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 570, 150, 40));

        jLabel43.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel43.setText("Course ID");
        resultPanel.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 570, 120, 45));

        btnAddGrade_auto.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        btnAddGrade_auto.setText("Add grade");
        btnAddGrade_auto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGrade_autoActionPerformed(evt);
            }
        });
        resultPanel.add(btnAddGrade_auto, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 560, 130, 50));

        btnResultUpdate.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        btnResultUpdate.setText("Update Result");
        btnResultUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultUpdateActionPerformed(evt);
            }
        });
        resultPanel.add(btnResultUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 170, 50));

        jLabel44.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel44.setText("Student ID");
        resultPanel.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 140, 45));

        jLabel45.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel45.setText("Student ID");
        resultPanel.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, 140, 45));

        jLabel46.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel46.setText("Year");
        resultPanel.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 140, 45));

        stu_sem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultPanel.add(stu_sem, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 150, 280, 40));

        stu_id.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultPanel.add(stu_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 30, 280, 40));

        stu_year.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        resultPanel.add(stu_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 90, 280, 40));

        btnSendEmail.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        btnSendEmail.setText("Send Email");
        btnSendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendEmailActionPerformed(evt);
            }
        });
        resultPanel.add(btnSendEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 230, 140, 50));

        mainPanel.add(resultPanel, "card4");

        viewResultPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewResultPanel.setPreferredSize(new java.awt.Dimension(1090, 681));
        viewResultPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel22.setText("Year");
        viewResultPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 60, 45));

        jLabel23.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel23.setText("Intake");
        viewResultPanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 80, 45));

        jLabel24.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel24.setText("Search");
        viewResultPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 30, 80, 30));

        btnResultSearch.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        btnResultSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/1.jpg"))); // NOI18N
        btnResultSearch.setText("Add ");
        btnResultSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResultSearchActionPerformed(evt);
            }
        });
        viewResultPanel.add(btnResultSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 20, 111, 52));

        txtStuid.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        viewResultPanel.add(txtStuid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 200, 40));

        year.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        viewResultPanel.add(year, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 70, 40));

        jLabel34.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel34.setText("Subject Code");
        viewResultPanel.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 130, 45));

        subject_code.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        viewResultPanel.add(subject_code, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 140, 40));

        jLabel39.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel39.setText("Semester");
        viewResultPanel.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 100, 45));

        sem.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        viewResultPanel.add(sem, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 70, 40));

        result_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(result_table);

        viewResultPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 161, 1090, 520));

        jLabel48.setFont(new java.awt.Font("Berlin Sans FB", 0, 22)); // NOI18N
        jLabel48.setText("Student ID");
        viewResultPanel.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 130, 45));

        txtint.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        viewResultPanel.add(txtint, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 140, 40));

        mainPanel.add(viewResultPanel, "card6");

        add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 1090, 680));
    }// </editor-fold>//GEN-END:initComponents

    private void registerStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerStudentMouseClicked
        mainPanel.removeAll();
        mainPanel.add(registerPanel);
        mainPanel.revalidate();
        mainPanel.repaint();
    }//GEN-LAST:event_registerStudentMouseClicked

    private void enrolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enrolMouseClicked
        mainPanel.removeAll();
        mainPanel.add(enrolPanel);
        mainPanel.revalidate();
        mainPanel.repaint();
    }//GEN-LAST:event_enrolMouseClicked

    private void resultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultMouseClicked
        mainPanel.removeAll();
        mainPanel.add(resultPanel);
        mainPanel.revalidate();
        mainPanel.repaint();
    }//GEN-LAST:event_resultMouseClicked

    private void viewStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewStudentMouseClicked
        mainPanel.removeAll();
        mainPanel.add(viewStudentPanel);
        mainPanel.revalidate();
        mainPanel.repaint();
    }//GEN-LAST:event_viewStudentMouseClicked

    private void viewResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewResultMouseClicked
        mainPanel.removeAll();
        mainPanel.add(viewResultPanel);
        mainPanel.revalidate();
        mainPanel.repaint();
    }//GEN-LAST:event_viewResultMouseClicked
    private void hideFields(){
        lblIndex.setVisible(false);
        lblYear.setVisible(false);
        lblSubject.setVisible(false);
        lblGrade.setVisible(false);
        Sub1.setVisible(false);
        Sub2.setVisible(false);
        Sub3.setVisible(false);
        Sub4.setVisible(false);
        txtGrade1.setVisible(false);
        txtGrade2.setVisible(false);
        txtGrade3.setVisible(false);
        txtGrade4.setVisible(false);
        lblQualify.setVisible(false);
        lblInstitute.setVisible(false);
        lblYOC.setVisible(false);
        txtYOC.setVisible(false);
        txtIndex.setVisible(false);
        txtYear.setVisible(false);
    }
    private void showUndergrad(){
        lblIndex.setVisible(true);
        lblYear.setVisible(true);
        lblSubject.setVisible(true);
        lblGrade.setVisible(true);
        Sub1.setVisible(true);
        Sub2.setVisible(true);
        Sub3.setVisible(true);
        Sub4.setVisible(true);
        txtGrade1.setVisible(true);
        txtGrade2.setVisible(true);
        txtGrade3.setVisible(true);
        txtGrade4.setVisible(true);
        txtIndex.setVisible(true);
        txtYear.setVisible(true);
        lblQualify.setVisible(false);
        lblInstitute.setVisible(false);
        lblYOC.setVisible(false);
        txtYOC.setVisible(false);
    }
    private void showPostgrad(){
        lblIndex.setVisible(false);
        lblYear.setVisible(false);
        lblSubject.setVisible(false);
        lblGrade.setVisible(false);
        lblQualify.setVisible(true);
        lblInstitute.setVisible(true);
        lblYOC.setVisible(true);
        txtYOC.setVisible(true);
        Sub1.setVisible(false);
        Sub2.setVisible(false);
        Sub3.setVisible(false);
        Sub4.setVisible(false);
        txtGrade1.setVisible(false);
        txtGrade2.setVisible(false);
        txtGrade3.setVisible(false);
        txtGrade4.setVisible(false);
        txtIndex.setVisible(true);
        txtYear.setVisible(true);
    }
    private void radPostgradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radPostgradActionPerformed
        showPostgrad();
    }//GEN-LAST:event_radPostgradActionPerformed

    private void btnStuAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuAddActionPerformed
        //Add student to a student table.
        if(txtStuID.getText().trim().isEmpty()){//Checking whether student id field is empty
            txtStuID.setText("**Student ID number is empty**");
        }
        else{
        String query="insert into student(s_id,name,dob,gender,address,contact_no,email,course_id,intake,type)values(?,?,?,?,?,?,?,?,?,?)";
        String query1="insert into undergraduate(s_id,al_index,al_year)values(?,?,?)";
        String query2="insert into postgraduate(s_id,qualify_type,institute,yoc)values(?,?,?,?)";
        String query3="insert into student_alresult values('"+txtStuID.getText()+"',?,?)";
        String type;
        String gender;
        try{
            conn=MySqlConnect.ConnectDB();
            
            pst=conn.prepareStatement(query);
            pst.setString(1,txtStuID.getText());
            pst.setString(2,StuName.getText());
            pst.setString(3,DOB.getText());
            if(male.isSelected()){
                gender="M";
            }
            else{
                gender="F";
            }
            pst.setString(4,gender);
            pst.setString(5,StuAddress.getText());
            pst.setString(6,StuCno.getText());
            pst.setString(7,Email.getText());
            pst.setString(8, (String) cmbCourse.getSelectedItem());
            pst.setString(9,intake.getText());
            if(radUndergrad.isSelected()){
                type="Undergraduate";
            }
            else{
                type="Postgraduate";
            }
            pst.setString(10,type);
            pst.executeUpdate(); 
            if("Undergraduate".equals(type)){
                pst=conn.prepareStatement(query1);//Add information to "undergraduate" table if student is an undergraduate.
                pst.setString(1,txtStuID.getText());
                pst.setString(2,txtIndex.getText());
                pst.setString(3,txtYear.getText());
                pst.executeUpdate(); 
                pst=conn.prepareStatement(query3);//Add A/L results information to "student_alresult" table.
                pst.setString(1,Sub1.getText());
                pst.setString(2,txtGrade1.getText());
                pst.executeUpdate();
                pst.setString(1,Sub2.getText());
                pst.setString(2,txtGrade2.getText());
                pst.executeUpdate();
                pst.setString(1,Sub3.getText());
                pst.setString(2,txtGrade3.getText());
                pst.executeUpdate();
                pst.setString(1,Sub4.getText());
                pst.setString(2,txtGrade4.getText());
                pst.executeUpdate();
            }
            else{
                pst=conn.prepareStatement(query2);//Add information to "postgraduate" table if student is a postgraduate.
                pst.setString(1,txtStuID.getText());
                pst.setString(2,txtIndex.getText());
                pst.setString(3,txtYear.getText()); 
                pst.setString(4,txtYOC.getText()); 
                pst.executeUpdate();
            }
            
            
            conn.close();
            JOptionPane.showMessageDialog(null,"Student added successfully. ");
            clear();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        }
    }//GEN-LAST:event_btnStuAddActionPerformed

    private void radUndergradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radUndergradActionPerformed
        showUndergrad();
    }//GEN-LAST:event_radUndergradActionPerformed

    private void btnStuUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuUpdateActionPerformed
        //Update a student from the student table
        if(txtStuID.getText().trim().isEmpty()){ //Checking whether the student ID field is empty.
            txtStuID.setText("**Student ID number is empty**");
        }
        else{
            try{//Checking whether the student id exists in database
                conn=MySqlConnect.ConnectDB();
                pst=conn.prepareStatement("select * from student where s_id='"+txtStuID.getText()+"'");
                rs=pst.executeQuery();
                if(rs.next()){//if student id exists, it does following steps.
                    String query="update student set name=?,dob=?,gender=?,address=?,contact_no=?,email=?,course_id=?,intake=? where s_id=?";
                    String query1="update undergraduate set al_index=?,al_year=? where s_id=?";
                    String query2="update postgraduate set qualify_type=?,institute=?,yoc=? where s_id=?";
                    try{
                        conn=MySqlConnect.ConnectDB();  
                        pst=conn.prepareStatement(query);
                        pst.setString(1, StuName.getText());
                        pst.setString(2, DOB.getText());
                        if(male.isSelected()){
                            pst.setString(3, "M");
                        }
                        else{
                            pst.setString(3, "F");
                        }
                        pst.setString(4, StuAddress.getText());
                        pst.setString(5, StuCno.getText());
                        pst.setString(6, Email.getText());
                        pst.setString(7, (String) cmbCourse.getSelectedItem());
                        pst.setString(8, intake.getText());
                        pst.setString(9, txtStuID.getText());
                        pst.executeUpdate();
                        if(radUndergrad.isSelected()){
                            pst=conn.prepareStatement(query1);
                            pst.setString(1, txtIndex.getText());
                            pst.setString(2, txtYear.getText());
                            pst.setString(3, txtStuID.getText());
                            pst.executeUpdate();
                        }
                        else{
                            pst=conn.prepareStatement(query2);
                            pst.setString(1, txtIndex.getText());
                            pst.setString(2, txtYear.getText());
                            pst.setString(3, txtYOC.getText());
                            pst.setString(4, txtStuID.getText());
                            pst.executeUpdate();
                        }
                        conn.close();
                        JOptionPane.showMessageDialog(null,"Student details updated successfully. ");
                        clear();
                    }
                    catch(SQLException e){
                        JOptionPane.showMessageDialog(null,e);
                    }
                }//if student id is not in database, gives an error
                else{
                    JOptionPane.showMessageDialog(null,"Invalid Student ID number");
                }
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
        
        }
    }//GEN-LAST:event_btnStuUpdateActionPerformed
    private void Updatecombo(){
        String query1="select * from course";
        String query="select * from faculty";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            while(rs.next()){
                cmbFac.addItem(rs.getString("faculty_id"));
            }
            
            conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }
    private void btnEnrolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnrolActionPerformed
        String query1="select sum(credit) as tot from subject,enrol where sub_id=subject_id and s_id='"+txtSid.getText()+"' and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"'";
        String query="insert into enrol(s_id,subject_id)values(?,?)";
        String query2="select e.subject_id,s.sub_name as subject_name,s.credit from enrol e,subject s where e.subject_id=s.sub_id and e.s_id=? and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"' order by s.sub_id asc";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);//Enrol a subject
            pst.setString(1, txtSid.getText());
            pst.setString(2, sub_id.getText());
            pst.executeUpdate();
            pst=conn.prepareStatement(query1);//Calculate total of enrolled subjects of coming semester.
            rs=pst.executeQuery();
            while(rs.next()){
                lblCredit.setText(rs.getString("tot"));
            }
            rs.close();pst.close();conn.close();
            try{//Loading the table of enrolled subjects of a student for coming semester.
                conn=MySqlConnect.ConnectDB();
                pst=conn.prepareStatement(query2); 
                pst.setString(1, txtSid.getText());
                rs=pst.executeQuery();
                enrol_table.setModel(DbUtils.resultSetToTableModel(rs));
                conn.close();
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null,"Error loading table");
            }
            
            sub_id.setText("");
        } 
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_btnEnrolActionPerformed

    private void btnUnenrolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnenrolActionPerformed
        String query="delete from enrol where s_id=? and subject_id=?";
        String query1="select sum(credit) as tot from subject,enrol where sub_id=subject_id and s_id='"+txtSid.getText()+"' and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"'";
        String query2="select e.subject_id,s.sub_name as subject_name,s.credit from enrol e,subject s where e.subject_id=s.sub_id and e.s_id=? and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"' order by s.sub_id asc";
        try{//Checking whether student id and subject id exists in database
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement("select * from enrol where s_id='"+txtSid.getText()+"' and subject_id='"+sub_id.getText()+"'");
            rs=pst.executeQuery();
            if(rs.next()){//if student id and subject id exists, it does following steps
                
            
                try{//Unenrol a subject
                    conn=MySqlConnect.ConnectDB();
                    pst=conn.prepareStatement(query);//Unenrol a subject
                    pst.setString(1, txtSid.getText());
                    pst.setString(2, sub_id.getText());
                    pst.execute();
                    pst=conn.prepareStatement(query1);//Calculate total of enrolled subjects of coming semester.
                    rs=pst.executeQuery();
                    while(rs.next()){
                        lblCredit.setText(rs.getString("tot"));
                    }
                    rs.close();pst.close();conn.close();
                    JOptionPane.showMessageDialog(null,"Unenrolled Successfully. ");
                    try{//Loading the table of enrolled subjects of a student for coming semester.
                        conn=MySqlConnect.ConnectDB();
                        pst=conn.prepareStatement(query2); 
                        pst.setString(1, txtSid.getText());
                        rs=pst.executeQuery();
                        enrol_table.setModel(DbUtils.resultSetToTableModel(rs));
                        conn.close();
                    }
                    catch(SQLException e){
                        JOptionPane.showMessageDialog(null,e);
                    }
                    
                    
                    txtSid.setText("");sub_id.setText("");txtyr.setText("");txtSem.setText("");
                } 
                catch (SQLException e) {
                    JOptionPane.showMessageDialog(null,e);
                }
            }
            else{//if student id and subject id doesnt exist, gives an error
                JOptionPane.showMessageDialog(null,"Invalid Student ID or SubjectID");
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_btnUnenrolActionPerformed

    private void btnResultAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultAddActionPerformed
        String query="insert into result(s_id,subject_id,assesment,weight,result,total)values(?,?,?,?,?,?)";
        float a=Float.parseFloat(weight.getText());
        int b=Integer.parseInt(txtResult.getText());
        float c=(float)a*b;
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            pst.setString(1, txtID.getText());
            pst.setString(2, txtSubID.getText());
            pst.setString(3, txtasses.getText());
            pst.setString(4, weight.getText());
            pst.setString(5, txtResult.getText());
            pst.setString(6, Float.toString(c));
            pst.executeUpdate();
            txtResult.setText("");txtID.setText("");
            conn.close();
            
        } 
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnResultAddActionPerformed

    private void btnStuSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuSearchActionPerformed
        String a=stuid.getText();String b=course_id.getText();String c=txtInta.getText();String query;
        if("".equals(b) && "".equals(c)){
            query="select * from student where s_id='"+a+"'";
        }
        else{
            query="select * from student where course_id='"+b+"' and intake='"+c+"' order by s_id";
        }
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            student_table.setModel(DbUtils.resultSetToTableModel(rs));
            conn.close();
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnStuSearchActionPerformed

    private void btnenrolSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnenrolSearchActionPerformed
        String query;lblCredit.setText("");
        if("".equals(txtyr.getText()) && "".equals(txtSem.getText())){query="select e.subject_id,s.sub_name as subject_name,s.sub_year as year,s.semester,s.credit from enrol e,subject s where e.subject_id=s.sub_id and e.s_id=? order by s.sub_year,s.semester,s.sub_id asc";}
        else if("".equals(txtSem.getText())){query="select e.subject_id,s.sub_name as subject_name,s.credit,s.semester from enrol e,subject s where e.subject_id=s.sub_id and e.s_id=? and sub_year='"+txtyr.getText()+"' order by s.semester,s.sub_id asc";}
        else{query="select e.subject_id,s.sub_name as subject_name,s.credit from enrol e,subject s where e.subject_id=s.sub_id and e.s_id=? and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"' order by s.sub_id asc";}
        try{
           conn=MySqlConnect.ConnectDB();
           pst=conn.prepareStatement(query); 
           pst.setString(1, txtSid.getText());
           rs=pst.executeQuery();
           enrol_table.setModel(DbUtils.resultSetToTableModel(rs));
           conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnenrolSearchActionPerformed

    private void txtStuIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStuIDActionPerformed
        //Getting the student information stored in the database to text fields.
        String a=txtStuID.getText();
        String query="select * from student,course where student.course_id=course.course_id and s_id='"+a+"'";
        String query1="select * from undergraduate where s_id='"+a+"'";
        String query2="select * from postgraduate where s_id='"+a+"'";
        String query3="select * from student_alresult where s_id='"+a+"'";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);//Getting information of a student
            rs=pst.executeQuery();
            if(rs.next()){
                StuName.setText(rs.getString("name"));
                DOB.setText(rs.getString("dob"));
                if("M".equals(rs.getString("gender"))){
                    male.setSelected(true);
                }
                else{
                    female.setSelected(true);
                }
                StuAddress.setText(rs.getString("address"));
                StuCno.setText(rs.getString("contact_no"));
                Email.setText(rs.getString("email"));
                cmbFac.setSelectedItem(rs.getString("faculty_id"));
                cmbCourse.addItem(rs.getString("course_id"));
                cmbCourse.setSelectedItem(rs.getString("course_id"));
                intake.setText(rs.getString("intake"));
                if("Undergraduate".equals(rs.getString("type"))){ //Getting information of a student if he's an undergraduate.
                    radUndergrad.setSelected(true);
                    showUndergrad();
                    pst=conn.prepareStatement(query1);
                    rs=pst.executeQuery();
                    while(rs.next()){
                        txtIndex.setText(rs.getString("al_index"));
                        txtYear.setText(rs.getString("al_year"));
                    }
                    pst=conn.prepareStatement(query3);//Getting the A/L results of a student
                    rs=pst.executeQuery();
                    if(rs.next()){
                        Sub1.setText(rs.getString("subject"));
                        txtGrade1.setText(rs.getString("result"));
                    }
                    if(rs.next()){
                        Sub2.setText(rs.getString("subject"));
                        txtGrade2.setText(rs.getString("result"));
                    }
                    if(rs.next()){
                        Sub3.setText(rs.getString("subject"));
                        txtGrade3.setText(rs.getString("result"));
                    }
                    if(rs.next()){
                        Sub4.setText(rs.getString("subject"));
                        txtGrade4.setText(rs.getString("result"));
                    }
                    
                }
                else{ //If student is a postgraduate
                    radPostgrad.setSelected(true);
                    showPostgrad();
                    pst=conn.prepareStatement(query2);
                    rs=pst.executeQuery();
                    while(rs.next()){
                        txtIndex.setText(rs.getString("qualify_type"));
                        txtYear.setText(rs.getString("institute"));
                        txtYOC.setText(rs.getString("yoc"));
                    }
                }
                
            }
            else{// if the student id number does not match, gives an error
                JOptionPane.showMessageDialog(null,"Invalid Student ID number");
            }
            conn.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtStuIDActionPerformed

    private void cmbCourseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbCourseMouseEntered
        String a=(String) cmbFac.getSelectedItem();
        String query="select * from course where faculty_id='"+a+"'";
        
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            cmbCourse.removeAllItems();
            while(rs.next()){
                cmbCourse.addItem(rs.getString("course_id"));
            }
            conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_cmbCourseMouseEntered

    private void btnResultSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultSearchActionPerformed
        String a=txtStuid.getText();String b=subject_code.getText();String c=sem.getText();String d=year.getText();String f=txtint.getText();
        String query;
        if("".equals(a) && "".equals(c) && "".equals(d)){
            query="select enrol.s_id,grade from enrol,student where student.s_id=enrol.s_id and subject_id='"+b+"' and intake='"+f+"' order by student.s_id asc";
        }
        else if("".equals(c) && "".equals(d) && "".equals(f)){
            query="select assesment,result from result where s_id='"+a+"' and subject_id='"+b+"'";
        }
        else if("".equals(b) && "".equals(c) && "".equals(f)){
            query="select e.subject_id,e.grade from enrol e,subject s where e.subject_id=s.sub_id and e.s_id='"+a+"' and s.sub_year='"+d+"' order by s.sub_id asc";
        }
        
        else{
            query="select e.subject_id,e.grade from enrol e,subject s where e.subject_id=s.sub_id and e.s_id='"+a+"' and s.sub_year='"+d+"' and s.semester='"+c+"' order by s.sub_id asc";
        }
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            result_table.setModel(DbUtils.resultSetToTableModel(rs));
            conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnResultSearchActionPerformed

    private void btnGradeAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGradeAddActionPerformed
        String query="update enrol set grade=? where s_id=? and subject_id=?";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            pst.setString(1, txtGrade.getText());
            pst.setString(2, txtID.getText());
            pst.setString(3, txtSubID.getText());
            pst.executeUpdate();
            conn.close();
            txtGrade.setText("");
            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnGradeAddActionPerformed

    private void btnAddGrade_autoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGrade_autoActionPerformed
        
        String query="select student.s_id from student,enrol where student.s_id=enrol.s_id and subject_id='"+txtsub_id.getText()+"' and course_id='"+txtc_id.getText()+"' and intake='"+txtin.getText()+"'";
        String[] array;Float[] array1;
        String query1="select count(enrol.s_id) as rowcount from student,enrol where student.s_id=enrol.s_id and course_id='"+txtc_id.getText()+"' and intake='"+txtin.getText()+"' and subject_id='"+txtsub_id.getText()+"'";
        String query2="select sum(total) as tot from result where s_id=? and subject_id='"+txtsub_id.getText()+"'";
        String query3="update enrol set grade=? where s_id=? and subject_id='"+txtsub_id.getText()+"'";
        try{//Checking whether student id, course id, intake exists in database
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            if(rs.next()){//if student id,course id and intake exists,it does following steps
                try{//calculate grades of a subject automatically of a particular batch.
                    conn=MySqlConnect.ConnectDB();
                    pst=conn.prepareStatement(query1);
                    rs=pst.executeQuery();
                    rs.next();
                    int count=rs.getInt("rowcount");

                    array=new String[count];
                    array1=new Float[count];
                    pst=conn.prepareStatement(query);
                    rs=pst.executeQuery();
                    int i=0;
                    while(rs.next()){

                            array[i]=rs.getString("s_id");
                            i++;

                    }
                    pst=conn.prepareStatement(query2);
                    for(int j=0;j<count;j++){
                        pst.setString(1, array[j]);
                        rs=pst.executeQuery();

                        while(rs.next()){

                            array1[j]=Float.parseFloat(rs.getString("tot"));

                        }
                    }
                    pst=conn.prepareStatement(query3);
                    for(int s=0;s<count;s++){

                        if(array1[s]>=90){pst.setString(1, "A+");}
                        else if(array1[s]>=80){pst.setString(1, "A");}
                        else if(array1[s]>=75){pst.setString(1, "A-");}
                        else if(array1[s]>=70){pst.setString(1, "B+");}
                        else if(array1[s]>=65){pst.setString(1, "B");}
                        else if(array1[s]>=60){pst.setString(1, "B-");}
                        else if(array1[s]>=55){pst.setString(1, "C+");}
                        else if(array1[s]>=50){pst.setString(1, "C");}
                        else if(array1[s]>=45){pst.setString(1, "C-");}
                        else if(array1[s]>=40){pst.setString(1, "D+");}
                        else if(array1[s]>=35){pst.setString(1, "D");}
                        else if(array1[s]>=30){pst.setString(1, "D-");}
                        else {pst.setString(1, "E");}
                        pst.setString(2, array[s]);

                        pst.executeUpdate();
                    }

                    conn.close();
                    JOptionPane.showMessageDialog(null,"Grades added successfully. ");
                    txtsub_id.setText("");txtc_id.setText("");txtin.setText("");
                }
                catch(NumberFormatException | SQLException e){
                    JOptionPane.showMessageDialog(null,e);
                }
            }//if student id or course id or intake doesnt exist in database, gives an error
            else{
                JOptionPane.showMessageDialog(null,"Invalid student Id or course id");
            }
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_btnAddGrade_autoActionPerformed

    private void btnStuDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStuDeleteActionPerformed
        //Delete a student from student table
        if(txtStuID.getText().trim().isEmpty()){//Checking whether student id field is empty
            txtStuID.setText("**Student ID number is empty**");
        }
        else{   
            try{//Checking whether the student id exists in database
                conn=MySqlConnect.ConnectDB();
                pst=conn.prepareStatement("select * from student where s_id='"+txtStuID.getText()+"'");
                rs=pst.executeQuery();
                if(rs.next()){//if student id exists in database, it does following steps.
                    String query="delete from student where s_id=?";
                    int option=JOptionPane.showConfirmDialog(null,"Do you really want to delete student? ","Delete",JOptionPane.YES_NO_OPTION);
                    if(option==0){
                       try{
                        conn=MySqlConnect.ConnectDB();
                        pst=conn.prepareStatement(query);
                        pst.setString(1,txtStuID.getText());
                        pst.execute();
                        conn.close();
                        clear();
                        }
                        catch(SQLException e){
                            JOptionPane.showMessageDialog(null,e);
                        } 
                    }
                }
                else{//if student id does not exist in database, gives an error
                    JOptionPane.showMessageDialog(null,"Student ID number does not exist");
                }
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null,e);
            }
            
               
        }
                
        
        
    }//GEN-LAST:event_btnStuDeleteActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        String query="select * from result where s_id='"+txtID.getText()+"' and subject_id='"+txtSubID.getText()+"' and assesment='"+txtasses.getText()+"'";
        String query1="select * from enrol where s_id='"+txtID.getText()+"' and subject_id='"+txtSubID.getText()+"'";
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            while(rs.next()){
                weight.setText(rs.getString("weight"));
                txtResult.setText(rs.getString("result")); 
            }
            pst=conn.prepareStatement(query1);
            rs=pst.executeQuery();
            while(rs.next()){
                txtGrade.setText(rs.getString("grade"));
            }
            conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnResultUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResultUpdateActionPerformed
        String query="update result set result='"+txtResult.getText()+"',total=? where s_id='"+txtID.getText()+"' and subject_id='"+txtSubID.getText()+"' and assesment='"+txtasses.getText()+"'";
        String query1="update enrol set grade='"+txtGrade.getText()+"' where s_id='"+txtID.getText()+"' and subject_id='"+txtSubID.getText()+"'";
        float a=Float.parseFloat(weight.getText());
        int b=Integer.parseInt(txtResult.getText());
        float c=(float)a*b;
        try{
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            pst.setString(1, Float.toString(c));
            pst.executeUpdate();
            if(!"".equals(txtGrade.getText())){
                pst=conn.prepareStatement(query1);
                pst.executeUpdate();
            }
            pst.close();conn.close();
            JOptionPane.showMessageDialog(null,"Result updated successfully. ");
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        
    }//GEN-LAST:event_btnResultUpdateActionPerformed

    private void btnSendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendEmailActionPerformed
        String a=stu_id.getText();String b=stu_year.getText();String c=stu_sem.getText();
        String query="select * from enrol inner join subject on enrol.subject_id=subject.sub_id where s_id='"+a+"' and sub_year='"+b+"' and semester='"+c+"'";
        String query1="select email from student where s_id='"+a+"'";
        try{
            //Making PDF report of Semester Results of a Student
            Document report=new Document();
            PdfWriter.getInstance(report, new FileOutputStream("grades.pdf"));
            report.open();
            PdfPTable table=new PdfPTable(2);
            
            table.addCell("Subject ID");
            table.addCell("Grade");
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            while(rs.next()){
                table.addCell(rs.getString("subject_id"));
                table.addCell(rs.getString("grade"));
                
                
            }
            report.add(table);
            report.close();
            rs.close();pst.close();conn.close();
            
            //Sending email Part
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query1);
            rs=pst.executeQuery();
            String host="smtp.gmail.com";
            String user="sasini.vidarshi85@gmail.com";
            String password="sasinivd";
            String to = null;
            while(rs.next()){to=rs.getString("email");}
            
            String subject="Semester Results";
            String msgText="Semester Results of the current Academic year";
            
            
            Properties props=System.getProperties();
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            
            
            
            
            Session session= Session.getDefaultInstance(props,new javax.mail.Authenticator() {
    @Override
    protected PasswordAuthentication getPasswordAuthentication() {
        return new PasswordAuthentication(user, password);
    }});
            
            Message msg=new MimeMessage(session);
            msg.setFrom(new InternetAddress(user));
            
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            msg.setSubject(subject); 
            msg.setSentDate(new Date());
            msg.setText(msgText);
            MimeBodyPart messageBodyPart=new MimeBodyPart();
            Multipart multipart=new MimeMultipart();
            String file="F:/java/NSBM/grades.pdf";
            String filename="Semester Results";
            messageBodyPart=new MimeBodyPart();
            DataSource source=new FileDataSource(file);
            messageBodyPart.setDataHandler(new DataHandler(source));
            messageBodyPart.setFileName(filename);
            multipart.addBodyPart(messageBodyPart);
            msg.setContent(multipart);
            Transport.send(msg);
            rs.close();pst.close();conn.close();
            JOptionPane.showMessageDialog(null,"Email sent successfully. ");
        }
        catch(SQLException | FileNotFoundException | DocumentException | MessagingException e){
            JOptionPane.showMessageDialog(null,e);
        }
        
        
    }//GEN-LAST:event_btnSendEmailActionPerformed

    private void txtSemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSemActionPerformed
        
        String query1="select e.subject_id,s.sub_name as subject_name,s.credit from enrol e,subject s where e.subject_id=s.sub_id and e.s_id=? and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"' order by s.sub_id asc";
        String query="select sum(credit) as tot from subject,enrol where sub_id=subject_id and s_id='"+txtSid.getText()+"' and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"'";
        try{
           //Display table of Enrolled subjects of the coming semester.
           conn=MySqlConnect.ConnectDB();
           pst=conn.prepareStatement(query1); 
           pst.setString(1, txtSid.getText());
           rs=pst.executeQuery();
           enrol_table.setModel(DbUtils.resultSetToTableModel(rs));
           conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
        try{
            //Display total credits of the enrolled subjects of coming semester.
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            while(rs.next()){
                lblCredit.setText(rs.getString("tot"));
            }
            pst.close();rs.close();conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtSemActionPerformed

    private void txtyrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtyrActionPerformed
        String query="select sum(credit) as tot from subject,enrol where sub_id=subject_id and s_id='"+txtSid.getText()+"' and sub_year='"+txtyr.getText()+"'";
        try{
            //Display total credits of the enrolled subjects of current year
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            while(rs.next()){
                lblCredit.setText(rs.getString("tot"));
            }
            pst.close();rs.close();conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null,e);
        }
    }//GEN-LAST:event_txtyrActionPerformed

    private void btnEmail_FeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmail_FeeActionPerformed
        String query="select * from enrol,subject where sub_id=subject_id and s_id='"+txtSid.getText()+"' and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"'";
        String query1="select sum(subject_fee) as tot from enrol,subject where sub_id=subject_id and s_id='"+txtSid.getText()+"' and sub_year='"+txtyr.getText()+"' and semester='"+txtSem.getText()+"'";
        String query2="select email from student where s_id='"+txtSid.getText()+"'";
        try{
            //Making PDF report of Enrolled Subjects of a student
            Document report=new Document();
            PdfWriter.getInstance(report, new FileOutputStream("enrolled subjects.pdf"));
            report.open();
            PdfPTable table=new PdfPTable(3);
            
            table.addCell("Subject Code");
            table.addCell("Subject Name");
            table.addCell("Subject Fee");
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query);
            rs=pst.executeQuery();
            while(rs.next()){
                table.addCell(rs.getString("subject_id"));
                table.addCell(rs.getString("sub_name"));
                table.addCell(rs.getString("subject_fee"));
                
            }
            report.add(table);
            Paragraph p=new Paragraph();
            pst=conn.prepareStatement(query1);
            rs=pst.executeQuery();
            while(rs.next()){
                p.add("Total fee to pay :"+rs.getString("tot"));
            }
            report.add(p);
            report.close();
            rs.close();pst.close();conn.close();
            
            //Sending Email Part
            conn=MySqlConnect.ConnectDB();
            pst=conn.prepareStatement(query2);
            rs=pst.executeQuery();
            String host="smtp.gmail.com";
            String user="sasini.vidarshi85@gmail.com";
            String password="sasinivd";
            String to = null;
            while(rs.next()){to=rs.getString("email");}
            
            String subject="Enrolled Subjects of this semester";
            String msgText="";
            
            
            Properties props=System.getProperties();
            props.put("mail.smtp.starttls.enable", "true");
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");
            props.put("mail.smtp.auth", "true");
            
            
            
            
            Session session= Session.getDefaultInstance(props,new javax.mail.Authenticator() {
    @Override
    protected PasswordAuthentication getPasswordAuthentication() {
        return new PasswordAuthentication(user, password);
    }});
            
            Message msg=new MimeMessage(session);
            msg.setFrom(new InternetAddress(user));
            
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            msg.setSubject(subject); 
            msg.setSentDate(new Date());
            msg.setText(msgText);
            MimeBodyPart messageBodyPart=new MimeBodyPart();
            Multipart multipart=new MimeMultipart();
            String file="F:/java/NSBM/enrolled subjects.pdf";
            String filename="Enrolled Subjects";
            messageBodyPart=new MimeBodyPart();
            DataSource source=new FileDataSource(file);
            messageBodyPart.setDataHandler(new DataHandler(source));
            messageBodyPart.setFileName(filename);
            multipart.addBodyPart(messageBodyPart);
            msg.setContent(multipart);
            Transport.send(msg);
            rs.close();pst.close();conn.close();
            JOptionPane.showMessageDialog(null,"Email sent successfully. ");
        }
        catch(SQLException | FileNotFoundException | DocumentException | MessagingException  e){
            JOptionPane.showMessageDialog(null,e);
        }
        
        
    }//GEN-LAST:event_btnEmail_FeeActionPerformed

    private void txtStuIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtStuIDMouseClicked
        txtStuID.setText("");
    }//GEN-LAST:event_txtStuIDMouseClicked
    private void clear(){
        txtStuID.setText("");StuName.setText("");DOB.setText("");Gender.clearSelection();StuAddress.setText("");StuCno.setText("");
        Email.setText("");intake.setText("");groupType.clearSelection();hideFields();
            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DOB;
    private javax.swing.JTextField Email;
    private javax.swing.ButtonGroup Gender;
    private javax.swing.JTextField StuAddress;
    private javax.swing.JTextField StuCno;
    private javax.swing.JTextField StuName;
    private javax.swing.JTextField Sub1;
    private javax.swing.JTextField Sub2;
    private javax.swing.JTextField Sub3;
    private javax.swing.JTextField Sub4;
    private javax.swing.JButton btnAddGrade_auto;
    private javax.swing.JButton btnEmail_Fee;
    private javax.swing.JButton btnEnrol;
    private javax.swing.JButton btnGradeAdd;
    private javax.swing.JButton btnResultAdd;
    private javax.swing.JButton btnResultSearch;
    private javax.swing.JButton btnResultUpdate;
    private javax.swing.JButton btnSendEmail;
    private javax.swing.JButton btnStuAdd;
    private javax.swing.JButton btnStuDelete;
    private javax.swing.JButton btnStuSearch;
    private javax.swing.JButton btnStuUpdate;
    private javax.swing.JButton btnUnenrol;
    private javax.swing.JButton btnenrolSearch;
    private javax.swing.JComboBox<String> cmbCourse;
    private javax.swing.JComboBox<String> cmbFac;
    private javax.swing.JTextField course_id;
    private javax.swing.JPanel enrol;
    private javax.swing.JPanel enrolPanel;
    private javax.swing.JTable enrol_table;
    private javax.swing.JRadioButton female;
    private javax.swing.ButtonGroup groupType;
    private javax.swing.JTextField intake;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCredit;
    private javax.swing.JLabel lblGrade;
    private javax.swing.JLabel lblIndex;
    private javax.swing.JLabel lblInstitute;
    private javax.swing.JLabel lblQualify;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblYOC;
    private javax.swing.JLabel lblYear;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton male;
    private javax.swing.JRadioButton radPostgrad;
    private javax.swing.JRadioButton radUndergrad;
    private javax.swing.JPanel registerPanel;
    private javax.swing.JPanel registerStudent;
    private javax.swing.JPanel result;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JTable result_table;
    private javax.swing.JTextField sem;
    private javax.swing.JTextField stu_id;
    private javax.swing.JTextField stu_sem;
    private javax.swing.JTextField stu_year;
    private javax.swing.JTable student_table;
    private javax.swing.JTextField stuid;
    private javax.swing.JTextField sub_id;
    private javax.swing.JTextField subject_code;
    private javax.swing.JTextField txtGrade;
    private javax.swing.JTextField txtGrade1;
    private javax.swing.JTextField txtGrade2;
    private javax.swing.JTextField txtGrade3;
    private javax.swing.JTextField txtGrade4;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIndex;
    private javax.swing.JTextField txtInta;
    private javax.swing.JTextField txtResult;
    private javax.swing.JTextField txtSem;
    private javax.swing.JTextField txtSid;
    private javax.swing.JTextField txtStuID;
    private javax.swing.JTextField txtStuid;
    private javax.swing.JTextField txtSubID;
    private javax.swing.JTextField txtYOC;
    private javax.swing.JTextField txtYear;
    private javax.swing.JTextField txtasses;
    private javax.swing.JTextField txtc_id;
    private javax.swing.JTextField txtin;
    private javax.swing.JTextField txtint;
    private javax.swing.JTextField txtsub_id;
    private javax.swing.JTextField txtyr;
    private javax.swing.JPanel viewResult;
    private javax.swing.JPanel viewResultPanel;
    private javax.swing.JPanel viewStudent;
    private javax.swing.JPanel viewStudentPanel;
    private javax.swing.JTextField weight;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
